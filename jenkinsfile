pipeline {
    agent any
    environment 
    		{
   		 BRANCH_ENV = "test"
    		GIT_CREDENTIALS_ID="d318b3e0-d03b-40d1-a98f-d13fbdc3a0f5"
		NODE_EXTRA_CA_CERTS=""
		SERVER_KEY="Server.key"
		SFDX_AUDIENCE_URL="https://test.salesforce.com"

      		  }
		  

    	stages {
		stage ("Env Info") 
			{
			when {
				anyOf {
					changeRequest target: "test";
					changeRequest target: "uat";
					changeRequest target: "rel_1.0";
					branch "test";
					branch "uat"
					branch "rel_1.0"
				       }
			      }
			stages {
				stage("Fetch Branches") {
					when {
						branch "test";
						branch "uat"
						branch "rel_1.0"
					}
					steps {
						
						sh '''
							git config --add remote.origin.fetch +refs/heads/${BRANCH_ENV}:refs/remotes/origin/${BRANCH_ENV}
							git fetch --no-tags
						'''
						
					}
				}

        
    }
}

	stage("Find delta") {
					steps {
						sh "rm -Rf diff"
						sh "git clone https://github.com/dlively1/sf-packager.git"
						dir ("sf-packager") {
						sh "npm link"}
						sh " git checkout test"
						sh " git checkout rel_1.0"
						sh "sfpackage test rel_1.0 -p 55 ./Deploy/"
												
						}
}
	stage("JWT Auth + Validate") {
					steps {
						
						tryLogout()
						withCredentials([sshUserPrivateKey(credentialsId: SERVER_KEY, keyFileVariable: "JWT_KEY_FILE")]) 
						{
						sh '''
						sfdx version
						sfdx auth:jwt:grant --clientid 3MVG9SM6_sNwRXqv87fhnI9wtafC.ppK3YSLiD.Ccf55M9wRk1ks54KUGfVYPKsQoNCNfGEuMbU15hPRXgGV4 --jwtkeyfile C:/certificate/new-cert/server.key --username navdeep.singh@salesforce.com.csgdevops.ndev2 --instanceurl https://csg-devops-bootcamp--ndev2.sandbox.my.salesforce.com
						
						'''
						}
						}
}

}
}
	def tryLogout() {
	sh "sfdx force:auth:logout -u navdeep.singh@salesforce.com.csgdevops.ndev2 -p || true"
			}
